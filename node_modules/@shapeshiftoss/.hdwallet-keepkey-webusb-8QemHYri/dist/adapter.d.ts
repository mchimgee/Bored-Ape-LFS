/// <reference types="w3c-web-usb" />
import * as keepkey from "@shapeshiftoss/hdwallet-keepkey";
import { Device, TransportDelegate } from "./transport";
export declare const AdapterDelegate: {
    getDevices(): Promise<Device[]>;
    getDevice(serialNumber?: string | undefined): Promise<Device>;
    getTransportDelegate(device: Device): Promise<TransportDelegate>;
    registerCallbacks(handleConnect: (device: USBDevice) => void, handleDisconnect: (device: USBDevice) => void): void;
};
export declare const Adapter: keepkey.AdapterConstructor<{
    getDevices(): Promise<Device[]>;
    getDevice(serialNumber?: string | undefined): Promise<Device>;
    getTransportDelegate(device: Device): Promise<TransportDelegate>;
    registerCallbacks(handleConnect: (device: USBDevice) => void, handleDisconnect: (device: USBDevice) => void): void;
}>;
export declare const WebUSBKeepKeyAdapter: keepkey.AdapterConstructor<{
    getDevices(): Promise<Device[]>;
    getDevice(serialNumber?: string | undefined): Promise<Device>;
    getTransportDelegate(device: Device): Promise<TransportDelegate>;
    registerCallbacks(handleConnect: (device: USBDevice) => void, handleDisconnect: (device: USBDevice) => void): void;
}>;
//# sourceMappingURL=adapter.d.ts.map