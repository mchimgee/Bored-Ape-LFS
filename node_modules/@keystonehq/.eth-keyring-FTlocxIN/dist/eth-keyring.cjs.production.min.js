"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("@keystonehq/bc-ur-registry-eth"),r=require("@keystonehq/sdk"),s=(e=r)&&"object"==typeof e&&"default"in e?e.default:e,n=require("@keystonehq/base-eth-keyring");class a{constructor(){if(this.keystoneSDK=void 0,this.readCryptoHDKey=async()=>{const e=await this.keystoneSDK.read([r.SupportedResult.UR_CRYPTO_HDKEY],{title:"Sync Keystone",description:"Please scan the QR code displayed on your Keystone",renderInitial:{walletMode:"Web3",link:"https://keyst.one/defi"},URTypeErrorMessage:"The scanned QR code is not the sync code from the Keystone hardware wallet. Please verify the code and try again ( Keystone firmware V1.3.0 or newer required)."});if(e.status===r.ReadStatus.success){const{result:r}=e;return t.CryptoHDKey.fromCBOR(r.cbor)}throw new Error("Reading canceled")},this.requestSignature=async(e,s,n)=>{if(await this.keystoneSDK.play(e.toUR(),{hasNext:!0,title:s,description:n})===r.PlayStatus.canceled)throw new Error("#ktek_error[play-cancel]: play canceled");const a=await this.keystoneSDK.read([r.SupportedResult.UR_ETH_SIGNATURE],{title:"Scan Keystone",description:"Please scan the QR code displayed on your Keystone"});if(a.status===r.ReadStatus.canceled)throw new Error("#ktek_error[read-cancel]: read signature canceled");return t.ETHSignature.fromCBOR(a.result.cbor)},a.instance)return a.instance;s.bootstrap(),this.keystoneSDK=s.getSdk(),a.instance=this}}class o extends n.BaseKeyring{constructor(e){super(e),this.getInteraction=()=>new a}static getEmptyKeyring(){return new o({xfp:"",xpub:"",hdPath:"",perPage:5,page:0,accounts:[],currentAccount:0,paths:{}})}}o.type=n.BaseKeyring.type,exports.default=o;
//# sourceMappingURL=eth-keyring.cjs.production.min.js.map
