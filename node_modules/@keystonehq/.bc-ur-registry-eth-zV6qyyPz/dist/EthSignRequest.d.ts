/// <reference types="node" />
import { CryptoKeypath, DataItem, RegistryItem } from '@keystonehq/bc-ur-registry';
export declare enum DataType {
    transaction = 1,
    typedData = 2,
    personalMessage = 3,
    typedTransaction = 4
}
declare type signRequestProps = {
    requestId?: Buffer;
    signData: Buffer;
    dataType: DataType;
    chainId?: number;
    derivationPath: CryptoKeypath;
    address?: Buffer;
    origin?: String;
};
export declare class EthSignRequest extends RegistryItem {
    private requestId;
    private signData;
    private dataType;
    private chainId;
    private derivationPath;
    private address;
    private origin;
    getRegistryType: () => import("@keystonehq/bc-ur-registry/src/RegistryType").RegistryType;
    constructor(args: signRequestProps);
    private setupData;
    getRequestId: () => Buffer;
    getSignData: () => Buffer;
    getDataType: () => DataType;
    getChainId: () => number;
    getDerivationPath: () => string;
    getSignRequestAddress: () => Buffer;
    getOrigin: () => String;
    toDataItem: () => DataItem;
    static fromDataItem: (dataItem: any) => EthSignRequest;
    static fromCBOR: (_cborPayload: Buffer) => EthSignRequest;
    static constructETHRequest(signData: Buffer, signDataType: DataType, hdPath: string, xfp: string, uuidString?: string, chainId?: number, address?: string, origin?: string): EthSignRequest;
}
export {};
